########################################################################
## file OMakefile
##
## Description:
##      This file is part of the Reflective Persistent System.
##
##      It is its OMakefile, for the omake automation builder.
##      It is a small adaptation of standard OMakefile-s (MIT licensed)
##
## Author(s):
##      Basile Starynkevitch <basile@starynkevitch.net>
##      Abhishek Chakravarti <abhishek@taranjali.org>
##
##      Â© Copyright 2019 The Reflective Persistent System Team
##      <https://refpersys.gitlab.io>
##
## License:
##    This program is free software: you can redistribute it and/or modify
##    it under the terms of the GNU General Public License as published by
##    the Free Software Foundation, either version 3 of the License, or
##    (at your option) any later version.
##
##    This program is distributed in the hope that it will be useful,
##    but WITHOUT ANY WARRANTY; without even the implied warranty of
##    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
##    GNU General Public License for more details.
##
##    You should have received a copy of the GNU General Public License
##    along with this program.  If not, see <http://www.gnu.org/licenses/>.

#

########################################################################
# Phony targets are scoped, so you probably want to declare them first.
#

.PHONY: all install clean

.DEFAULT: all

########################################################################
# Subdirectories.
# You may want to include some subdirectories in this project.
# If so, define the subdirectory targets and uncomment this section.
#

# .SUBDIRS:

########################################################################
# C and C++ configuration.
#

################################################
# Configuration.  You might want to modify any of these
# configuration variables.
#
DIALECTFLAGS = -std=gnu++17
# optimization flags: -O0 or -Og is better for debugging, -O1 or -O2 is
# better for benchmarking and both can be used with -g for debugging
# info...
OPTIMFLAGS = -O0 -g
WARNFLAGS = -Wall -Wextra
CXX= g++
CXXFLAGS += $(DIALECTFLAGS) $(OPTIMFLAGS) $(WARNFLAGS)

# ASFLAGS +=
LDFLAGS += -L/usr/local/lib -rdynamic -lunistring -lbacktrace -lpthread -ldl

INCLUDES += /usr/local/include
REFPERSYS_BASE_FILES[] =
   main_rps
   garbcoll_rps
   objects_rps
   perstore_rps
   primes_rps
   values_rps
   minitests_rps


REFPERSYS_BASE_HEADERS[] = refpersys

CXXProgram(refpersys, $(REFPERSYS_BASE_FILES) _timestamp_rps)



CLEAN[] =
  .omakedb
  .*~
  *~
  *.orig
  *.o
  *omc
  .omak*
  core
  refpersys
  _*.c
  _*.h
  _*.cc
  _*.hh

clean:
    rm -vf $(CLEAN)

all: refpersys
	mv -v _timestamp_rps.cc _timestamp_rps.cc~
	sync

_timestamp_rps.cc: $(addsuffixes .cc, $(REFPERSYS_BASE_FILES)) $(addsuffixes .hh, $(REFPERSYS_BASE_HEADERS))
	echo caret= $^ at= $@
	echo '// generated file ' $@ ' - DONT EDIT' > $@.tmp
	echo 'extern "C" const char timestamp_rps[];' >> $@.tmp
	echo 'extern "C" unsigned long timenum_rps;' >> $@.tmp
	echo 'extern "C" const char gitid_rps[];' >> $@.tmp
	echo 'extern "C" const char md5sum_rps[];' >> $@.tmp
	echo 'extern "C" const char cwd_rps[];' >> $@.tmp
#	echo 'extern "C" const char lastgitcommit_rps[];' >> $@.tmp
	echo 'extern "C" const char cxxcompiler_rps[];' >> $@.tmp
	echo 'extern "C" const char buildhost_rps[];' >> $@.tmp
	echo 'extern "C" const char sourcefiles_rps[];' >> $@.tmp
	echo 'extern "C" const char headerfiles_rps[];' >> $@.tmp
	date +'const char timestamp_rps[] = "%c"; unsigned long timenum_rps=%s;' >> $@.tmp
	(/bin/echo -n 'const char gitid_rps[]="'; \
	 git log --format=oneline -q -1 | cut '-d '  -f1 | tr -d '\n'; \
	 echo '";')  >> $@.tmp
	(/bin/echo -n 'const char md5sum_rps[]="'; \
	 cat $+ | md5sum | cut '-d '  -f1 | tr -d '\n'; \
	/bin/echo '";')  >> $@.tmp
	(/bin/echo -n 'const char cwd_rps[]="'; pwd | tr -d '\n'; echo '";')  >> $@.tmp
	(/bin/echo -n 'const char cxxcompiler_rps[]="' ; \
	 $(CXX) --version | head -1 | tr -d '\n'; \
	 /bin/echo '";') >> $@.tmp
#	(/bin/echo -n 'const char lastgitcommit_rps[]="' ; \
#	 git log --format=oneline --abbrev=12 --abbrev-commit -q  \
#	     | head -1 | tr -d '\n\\\\' ; \
#	 /bin/echo '";') >> $@.tmp
	(/bin/echo -n 'const char buildhost_rps[]="' ; \
	 hostname -f  | tr -d '\n'; \
	/bin/echo '";')  >> $@.tmp
	(/bin/echo -n 'const char sourcefiles_rps[]="' ; \
	 echo $(addsuffixes .cc, $(REFPERSYS_BASE_FILES))  | tr -d '\n'; \
	/bin/echo '";')  >> $@.tmp
	(/bin/echo -n 'const char headerfiles_rps[]="' ; \
	 echo $(addsuffixes .hh, $(REFPERSYS_BASE_HEADERS))  | tr -d '\n'; \
	/bin/echo '";')  >> $@.tmp
	mv  $@.tmp $@
