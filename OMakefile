########################################################################
## file OMakefile - see also OMakeroot
##
## Description:
##      This file is part of the Reflective Persistent System. refpersys.org
##
##      It is its OMakefile, for the omake automation builder.
##      It is a small adaptation of standard OMakefile-s (MIT licensed)
##
## Author(s):
##      Basile Starynkevitch <basile@starynkevitch.net>
##      Abhishek Chakravarti <abhishek@taranjali.org>
##      Nimesh Neema <nimeshneema@gmail.com>
##
##      Â© Copyright 2019 The Reflective Persistent System Team
##      team@refpersys.org
##
## License:
##    This program is free software: you can redistribute it and/or modify
##    it under the terms of the GNU General Public License as published by
##    the Free Software Foundation, either version 3 of the License, or
##    (at your option) any later version.
##
##    This program is distributed in the hope that it will be useful,
##    but WITHOUT ANY WARRANTY; without even the implied warranty of
##    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
##    GNU General Public License for more details.
##
##    You should have received a copy of the GNU General Public License
##    along with this program.  If not, see <http://www.gnu.org/licenses/>.

#

########################################################################
# Phony targets are scoped, so you probably want to declare them first.
#

.PHONY: all install clean indent

.DEFAULT: all

########################################################################
# Subdirectories.
# You may want to include some subdirectories in this project.
# If so, define the subdirectory targets and uncomment this section.
#

# .SUBDIRS:

########################################################################
# C and C++ configuration.
#

################################################
# Configuration.  You might want to modify any of these
# configuration variables.
#
DIALECTFLAGS = -std=gnu++17
# optimization flags: -O0 or -Og is better for debugging, -O1 or -O2 is
# better for benchmarking and both can be used with -g for debugging
# info...
CODGENFLAGS = -fPIC
OPTIMFLAGS = -Og -g3 
WARNFLAGS = -Wall -Wextra
# See https://www.freedesktop.org/wiki/Software/pkg-config/
PKGCONFIG = pkg-config
RPSGITID = $(shell ./generate-gitid.sh)
ASTYLE = astyle
ASTYLEFLAGS = --style=gnu -s2
QT5MOC = moc

# list of packages, for pkg-config.

PACKAGES = Qt5Core Qt5Gui Qt5Widgets jsoncpp
PKGINCFLAGS = $(shell $(PKGCONFIG) --cflags $(PACKAGES))
PKGLIBS=  $(shell $(PKGCONFIG) --libs $(PACKAGES))
CXX= g++
CXXFLAGS += $(DIALECTFLAGS) $(OPTIMFLAGS) $(CODGENFLAGS) $(WARNFLAGS) $(PKGINCFLAGS) -DRPS_GITID='"$(RPSGITID)"'

# ASFLAGS +=
LDFLAGS +=  $(CODGENFLAGS) -L/usr/local/lib -rdynamic $(PKGLIBS) -lhjson -lunistring -lbacktrace -lpthread -ldl

INCLUDES += /usr/local/include

## the base files of ordinary hand-written C++ source files
REFPERSYS_BASE_FILES[] =
   main_rps
   garbcoll_rps
   objects_rps
   primes_rps
   scalar_rps
   store_rps
   values_rps


## the base files of ordinary hand-written C++ header files
REFPERSYS_BASE_HEADERS[] = refpersys inline_rps

## the base files of ordinary hand-written Qt/C++ source files
REFPERSYS_QTBASE_FILES[] =
   appli_qrps
   window_qrps

## the base files of ordinary hand-written Qt/C++ header files with Q_OBJECT
REFPERSYS_QTBASE_HEADERS[] =
   qthead_qrps

_qthead_qrps.inc.hh: qthead_qrps.hh
	$(QT5MOC) $(PREFIXED_INCLUDES) $(PKGINCFLAGS) -DRPS_GITID=\"$(RPSGITID)\"   $< -o $@

CGeneratedFiles(_qthead_qrps.inc.hh)

CXXProgram(refpersys, $(REFPERSYS_BASE_FILES) $(REFPERSYS_QTBASE_FILES) _timestamp_rps)



CLEAN[] =
  .omakedb
  .*~
  *~
  *~%
  *.orig
  *.o
  *omc
  .omak*
  core*
  vgcore*
  refpersys
  _*.c
  _*.h
  _*.cc
  _*.hh

clean:
    rm -vf $(CLEAN)

all: refpersys
	mv -v _timestamp_rps.c _timestamp_rps.c~
	sync

_timestamp_rps.c: $(addsuffixes .cc, $(REFPERSYS_BASE_FILES) $(REFPERSYS_QTBASE_FILES)) $(addsuffixes .hh, $(REFPERSYS_BASE_HEADERS) $(REFPERSYS_QTBASE_HEADERS)) generate-timestamp.sh
   ./generate-timestamp.sh $@ > $@.tmp
   mv  $@.tmp $@

indent:
	./indent-cxx-files.sh  $(addsuffixes .cc, $(REFPERSYS_BASE_FILES) $(REFPERSYS_QTBASE_FILES)) $(addsuffixes .hh, $(REFPERSYS_BASE_HEADERS) $(REFPERSYS_QTBASE_HEADERS)) 

# end of file OMakefile
